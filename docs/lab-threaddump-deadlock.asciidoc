OBJECTIVE
---------

Primary purpose of this documents is analysing java thread dump while thread deadlock occurring.


PREREQUISITE
-------------

* Maven 3.0 or latter.
* Eclipse
* threadDump analysing tools

DESCRIPTION
-----------

As depicted in 

[[eap5-hang-3_image]]
.DeadLock
image::img/eap5-hang-3.png[]

Thread 1 do the following action: *locked the Resource A* `->` *prepare lock the Resource B* `->` *locking the Resource B* `->` *locked Resource B*

Thread 2 do the following action: *locked the Resource B* `->` *prepare lock the Resource A* `->` *locking the Resource A* `->` *locked Resource A*

We will use java code simulate this scenario, when the deadlock take place, we generate thread dump analysing it.


STEP
----

* Navigate to ../sandbox/lab-threaddump/deadlock, execute:
----
mvn clean install
----

deadlock-1.0.jar will be generated

----
$JAVA_HOME/bin/java -cp deadlock-1.0.jar com.kylin.lab.Runner 1
---- 

will show Thread 1 action as `DESCRIPTION` section depicted.

----
$JAVA_HOME/bin/java -cp deadlock-1.0.jar com.kylin.lab.Runner 2
----

will show Thread 2 action as `DESCRIPTION` section depicted.

* Simulate deadlock scenario, run `com.kylin.lab.Runner` with parameter `a`
----
$JAVA_HOME/bin/java -cp deadlock-1.0.jar com.kylin.lab.Runner a
----

* Generate thread dump
----
$JAVA_HOME/bin/jstack -l <PID> > deadlock.out
----


ANALYSING
---------

link:deadlock.out[Deadlock thread dump file]

